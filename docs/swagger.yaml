basePath: /
definitions:
  internal.bookRequest:
    properties:
      amount:
        type: integer
      id:
        type: integer
    type: object
  internal.transferRequest:
    properties:
      amount:
        type: integer
      fromuserid:
        type: integer
      orderid:
        type: integer
      serviceid:
        type: integer
      touserid:
        type: integer
    type: object
  structures.Order:
    properties:
      amount:
        type: integer
      date:
        type: string
      description:
        type: string
      fromuserid:
        type: integer
      id:
        type: integer
      orderid:
        type: integer
      serviceid:
        type: integer
      touserid:
        type: integer
    type: object
  structures.User:
    properties:
      amount:
        type: integer
      bookamount:
        type: integer
      id:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    name: Artemiy Chaykov
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Avito Backend Test Task
  version: "1.0"
paths:
  /balance/{id}:
    get:
      consumes:
      - application/json
      description: get active balance of the user account
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structures.User'
        "400":
          description: Bad Request
      summary: balance
      tags:
      - User account
  /book:
    put:
      consumes:
      - application/json
      description: book money on user account before withdraw operation
      parameters:
      - description: User id, money to book amount
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal.bookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structures.User'
        "400":
          description: Bad Request
      summary: book
      tags:
      - User account
  /deposit:
    put:
      consumes:
      - application/json
      description: top up the user's balance by id
      parameters:
      - description: User from whom this money, User to whom this money, order id,
          services id, money amount
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal.transferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structures.User'
        "400":
          description: Bad Request
      summary: deposit
      tags:
      - User account
  /report/{month}/{year}:
    get:
      consumes:
      - application/json
      description: create report CSV file with indicating the amount of revenue for
        each services, return url for the file
      parameters:
      - description: Month
        in: path
        name: month
        required: true
        type: integer
      - description: Year
        in: path
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
      summary: report
      tags:
      - Accounting
  /transactions/{id}/{order}:
    get:
      consumes:
      - application/json
      description: get list of the transactions for user. User can set order by date
        or amount
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: integer
      - description: a way to sort order
        in: path
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structures.Order'
        "400":
          description: Bad Request
      summary: transactions
      tags:
      - User account
  /unbook:
    put:
      consumes:
      - application/json
      description: unbook money on user account if withdraw fall
      parameters:
      - description: User id, money to unbook amount
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal.bookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structures.User'
        "400":
          description: Bad Request
      summary: unbook
      tags:
      - User account
  /withdraw:
    put:
      consumes:
      - application/json
      description: debiting money from a separate account
      parameters:
      - description: User from whom this money, User to whom this money, order id,
          services id, money amount
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal.transferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structures.User'
        "400":
          description: Bad Request
      summary: withdraw
      tags:
      - User account
swagger: "2.0"
